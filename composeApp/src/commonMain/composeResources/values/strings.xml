<resources>
    <string name="content_description">Image from resources</string>
    <string name="name">Alvaro Quintana</string>

    <string name="header_title">Software development with Kotlin</string>
    <string name="header_text">I create customized technological solutions.</string>
    <string name="header_description">I turn abstract ideas into viable technical solutions!</string>

    <string name="body_one_paragraph_one_one">I am </string>
    <string name="body_one_paragraph_one_two">Kotlin</string>
    <string name="body_one_paragraph_one_three"> specialist. I develop projects for </string>
    <string name="body_one_paragraph_one_four">Android</string>
    <string name="body_one_paragraph_one_five"> but we can use it for other environments... This page is written with </string>
    <string name="body_one_paragraph_one_six">Kotlin Wasm!</string>
    <string name="body_one_paragraph_one_seven"> Last year I met </string>
    <string name="body_one_paragraph_one_eight">Jetpack Compose</string>
    <string name="body_one_paragraph_one_nine"> and today I recommend it for new projects for its versatility against the old XML.</string>

    <string name="body_one_paragraph_two_one">Security is a crucial issue in the technological world. Avoiding user data leakage and exposure of private keys should be mandatory. I use </string>
    <string name="body_one_paragraph_two_two">penetration techniques</string>
    <string name="body_one_paragraph_two_three"> and </string>
    <string name="body_one_paragraph_two_four">traffic sniffing</string>
    <string name="body_one_paragraph_two_five"> to debug possible errors.</string>

    <string name="body_one_paragraph_three_one">I use </string>
    <string name="body_one_paragraph_three_two">Git</string>
    <string name="body_one_paragraph_three_three"> and I recommend </string>
    <string name="body_one_paragraph_three_four">Git Flow</string>
    <string name="body_one_paragraph_three_five"> for branch management. Familiar with Scrum Agile, I apply </string>
    <string name="body_one_paragraph_three_six">SOLID</string>
    <string name="body_one_paragraph_three_seven"> rules and prefer the </string>
    <string name="body_one_paragraph_three_eight">MVVM pattern</string>
    <string name="body_one_paragraph_three_nine"> with reactive views. Fundamental that the code runs concurrently and asynchronously making use of coroutines avoiding the main screen to freeze.</string>

    <string name="body_two_paragraph_one_one">I prefer </string>
    <string name="body_two_paragraph_one_two">HILT</string>
    <string name="body_two_paragraph_one_three"> for its compatibility with COMPOSE, although </string>
    <string name="body_two_paragraph_one_four">KOIN or DAGGER</string>
    <string name="body_two_paragraph_one_five"> can be used for older projects. I love </string>
    <string name="body_two_paragraph_one_six">Firebase</string>
    <string name="body_two_paragraph_one_seven"> for its error monitoring, user authentication, remote config, database management and messaging capabilities.</string>

    <string name="body_two_paragraph_two">Libraries are fundamental in my work. I especially like OkHttp, Retrofit, Flows and ARROW. Lately, I've been leaning towards Glide or Coil instead of Picasso. It is important to comply with the Material Design standard to offer a clean and fluid user experience, making use of native or Lottie animations.</string>

    <string name="title_company">Companies</string>
    <string name="title_portfolio">Portfolio</string>
</resources>